plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "org.jetbrains.kotlin.plugin.compose"
    id "org.jetbrains.kotlin.plugin.serialization"
    id "app.cash.sqldelight"
}

def localProperties = new Properties()
def localPropertiesFile = project.file("local.properties")
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
} else {
    throw new Exception("Required local properties file is missing: " + localPropertiesFile)
}
def ciSigningKeystoreFile = project.file("ci-signing.jks")

android {
    namespace "ua.com.radiokot.money"

    //noinspection GradleDependency
    compileSdk 35

    defaultConfig {
        applicationId "ua.com.radiokot.money"

        //noinspection OldTargetApi
        targetSdk 35
        minSdk 26

        versionCode 33
        versionName "0.18.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'SUPABASE_URL', "\"${localProperties.getProperty('supabaseUrl')}\""
        buildConfigField 'String', 'SUPABASE_ANON_KEY', "\"${localProperties.getProperty('supabaseAnonKey')}\""
        buildConfigField 'String', 'POWERSYNC_URL', "\"${localProperties.getProperty('powerSyncUrl')}\""
        buildConfigField 'String', 'AUTH_TEMP_CREDENTIAL', "\"${localProperties.getProperty('authTempCredential')}\""

        resValue 'string', 'uri_scheme', 'money21m'
        resValue 'string', 'auth_uri_host', 'auth'
    }

    buildFeatures {
        buildConfig true
        compose true
    }

    signingConfigs {
        ci {
            storeFile ciSigningKeystoreFile
            storePassword "ci"
            keyAlias "ci"
            keyPassword "ci"
        }
    }

    sourceSets {
        main {
            res.srcDirs += "src/main/res-packs"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"

            resValue 'string', 'uri_scheme', 'money21m-debug'
        }

        release {
            if (ciSigningKeystoreFile.exists()) {
                signingConfig signingConfigs.ci
            } else {
                signingConfig signingConfigs.debug
            }

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        //noinspection GrDeprecatedAPIUsage
        jvmTarget = "17"
    }

    packagingOptions {
        // Problems caused by Bouncy castle
        exclude "META-INF/versions/**"
        doNotStrip "**/*.so"
    }

    // F-Droid policy: https://gitlab.com/fdroid/admin/-/issues/367
    dependenciesInfo {
        includeInApk false
        includeInBundle false
    }
}

sqldelight {
    databases {
        create("MoneyAppDatabase") {
            packageName.set("ua.com.radiokot.money")
        }
    }
}

ext {
    // Requires Gradle update.
    activityVersion = "1.10.1"
    powersyncVersion = "1.6.0"
    supabaseVersion = "3.1.4"
}

dependencies {
    // Update requires compile SDK 36
    // noinspection GradleDependency
    implementation "androidx.core:core-ktx:1.16.0"
    implementation "androidx.appcompat:appcompat:1.7.1"
    // noinspection KtxExtensionAvailable
    implementation "androidx.activity:activity:$activityVersion"
    implementation "androidx.activity:activity-compose:$activityVersion"
    implementation "androidx.navigation:navigation-compose:2.9.4"
    implementation "androidx.paging:paging-compose:3.3.6"
    implementation "androidx.work:work-runtime-ktx:2.10.4"

    implementation platform("androidx.compose:compose-bom:2025.09.00")
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.foundation:foundation-layout"
    debugImplementation "androidx.compose.ui:ui-tooling"
    implementation "androidx.compose.ui:ui-tooling-preview"

    //noinspection NewerVersionAvailable
    implementation platform("io.insert-koin:koin-bom:4.1.0!!")
    implementation "io.insert-koin:koin-android"
    implementation "io.insert-koin:koin-core"
    implementation "io.insert-koin:koin-core-viewmodel"
    implementation "io.insert-koin:koin-compose-viewmodel-navigation"

    implementation "com.powersync:core:$powersyncVersion"
    implementation "com.powersync:connector-supabase:$powersyncVersion"
    // TODO remove when PowerSync is updated to 1.6.1
    implementation "com.powersync:powersync-sqlite-core:0.4.6"

    implementation "io.github.jan-tennert.supabase:functions-kt:$supabaseVersion"
    implementation "io.github.jan-tennert.supabase:postgrest-kt:$supabaseVersion"

    implementation "io.github.oshai:kotlin-logging-jvm:7.0.13"
    implementation "com.github.tony19:logback-android:3.0.0"
    implementation("org.slf4j:slf4j-api:2.0.17") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0"
    implementation "sh.calvin.reorderable:reorderable:3.0.0"
    implementation "cash.z.ecc.android:kotlin-bip39:1.0.9"
    implementation "com.composables:core:1.43.1"
    implementation "org.bouncycastle:bcprov-lts8on:2.73.8"
    implementation "app.cash.sqldelight:android-driver:2.1.0"

    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.7.0"

    testImplementation "com.jsoizo:kotlin-csv-jvm:1.10.0"
}

// Make the built APKs have a release-style name.
android.applicationVariants.configureEach { variant ->
    variant.outputs.configureEach { output ->
        outputFileName = "${variant.applicationId}-${variant.versionName}.apk"
    }
}
