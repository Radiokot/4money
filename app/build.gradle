plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "org.jetbrains.kotlin.plugin.compose"
    id "org.jetbrains.kotlin.plugin.serialization"
}

def localProperties = new Properties()
def localPropertiesFile = project.file("local.properties")
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
} else {
    throw new Exception("Required local properties file is missing: " + localPropertiesFile)
}
def ciSigningKeystoreFile = project.file("ci-signing.jks")

android {
    namespace 'ua.com.radiokot.money'
    compileSdk 35

    defaultConfig {
        applicationId "ua.com.radiokot.money"
        minSdk 26
        targetSdk 35
        versionCode 18
        versionName "0.8.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'SUPABASE_URL', "\"${localProperties.getProperty('supabaseUrl')}\""
        buildConfigField 'String', 'SUPABASE_ANON_KEY', "\"${localProperties.getProperty('supabaseAnonKey')}\""
        buildConfigField 'String', 'POWERSYNC_URL', "\"${localProperties.getProperty('powerSyncUrl')}\""
        buildConfigField 'String', 'AUTH_TEMP_CREDENTIAL', "\"${localProperties.getProperty('authTempCredential')}\""

        resValue 'string', 'uri_scheme', 'money21m'
        resValue 'string', 'auth_uri_host', 'auth'
    }

    buildFeatures {
        buildConfig true
        compose true
    }

    signingConfigs {
        ci {
            storeFile ciSigningKeystoreFile
            storePassword "ci"
            keyAlias "ci"
            keyPassword "ci"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"

            resValue 'string', 'uri_scheme', 'money21m-debug'
        }

        release {
            if (ciSigningKeystoreFile.exists()) {
                signingConfig signingConfigs.ci
            } else {
                signingConfig signingConfigs.debug
            }

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        // Problems caused by Bouncy castle
        exclude 'META-INF/versions/**'
        doNotStrip '**/*.so'
    }

    // F-Droid policy: https://gitlab.com/fdroid/admin/-/issues/367
    dependenciesInfo {
        includeInApk false
        includeInBundle false
    }
}

ext {
    coreKtxVersion = "1.15.0"
    junitVersion = "4.13.2"
    junitExtVersion = "1.2.1"
    espressoCoreVersion = "3.6.1"
    appcompatVersion = "1.7.0"
    composeBomVersion = "2025.02.00"
    navigationVersion = "2.8.8"
    pagingVersion = "3.3.6"
    activityVersion = "1.10.1"
    koinBomVersion = "4.0.2"
    powersyncVersion = "1.2.1"
    supabaseVersion = "3.1.4"
    kotlinLoggingVersion = "7.0.3"
    slf4jApiVersion = "2.0.16"
    logbackVersion = "3.0.0"
    kotlinSerializationJsonVersion = "1.8.0"
    workVersion = "2.10.1"
    composeUnstyledVersion = "1.31.0"
    bip39Version = "1.0.9"
    bouncycastleVersion = "2.73.7"
}

dependencies {
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    //noinspection KtxExtensionAvailable
    implementation "androidx.activity:activity:$activityVersion"
    implementation "androidx.activity:activity-compose:$activityVersion"
    implementation "androidx.navigation:navigation-compose:$navigationVersion"
    implementation "androidx.paging:paging-compose:$pagingVersion"
    implementation "androidx.work:work-runtime-ktx:$workVersion"

    implementation platform("androidx.compose:compose-bom:$composeBomVersion")
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.foundation:foundation-layout"
    debugImplementation "androidx.compose.ui:ui-tooling"
    implementation "androidx.compose.ui:ui-tooling-preview"

    implementation platform("io.insert-koin:koin-bom:$koinBomVersion")
    implementation "io.insert-koin:koin-android"
    implementation "io.insert-koin:koin-core"
    implementation "io.insert-koin:koin-core-viewmodel"
    implementation "io.insert-koin:koin-compose-viewmodel-navigation"

    implementation "com.powersync:core:$powersyncVersion"
    implementation "com.powersync:connector-supabase:$powersyncVersion"

    implementation "io.github.jan-tennert.supabase:functions-kt:$supabaseVersion"
    implementation "io.github.jan-tennert.supabase:postgrest-kt:$supabaseVersion"

    implementation "io.github.oshai:kotlin-logging-jvm:$kotlinLoggingVersion"
    implementation "com.github.tony19:logback-android:$logbackVersion"
    implementation("org.slf4j:slf4j-api:$slf4jApiVersion") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinSerializationJsonVersion"
    implementation "sh.calvin.reorderable:reorderable:2.4.3"
    implementation "cash.z.ecc.android:kotlin-bip39:$bip39Version"
    implementation "com.composables:core:$composeUnstyledVersion"
    implementation "org.bouncycastle:bcprov-lts8on:$bouncycastleVersion"

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitExtVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"

    testImplementation "com.jsoizo:kotlin-csv-jvm:1.10.0"
}

// Make the built APKs have a release-style name.
android.applicationVariants.configureEach { variant ->
    variant.outputs.configureEach { output ->
        outputFileName = "${variant.applicationId}-${variant.versionName}.apk"
    }
}
