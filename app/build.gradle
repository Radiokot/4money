plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.compose.compiler)
    alias(libs.plugins.kotlin.serialization)
}

def localProperties = new Properties()
def localPropertiesFile = project.file("local.properties")
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
} else {
    throw new Exception("Required local properties file is missing: " + localPropertiesFile)
}

android {
    namespace 'ua.com.radiokot.money'
    compileSdk 35

    defaultConfig {
        applicationId "ua.com.radiokot.money"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'SUPABASE_URL', "\"${localProperties.getProperty('supabaseUrl')}\""
        buildConfigField 'String', 'SUPABASE_ANON_KEY', "\"${localProperties.getProperty('supabaseAnonKey')}\""
        buildConfigField 'String', 'POWERSYNC_URL', "\"${localProperties.getProperty('powerSyncUrl')}\""
        buildConfigField 'String', 'AUTH_TEMP_CREDENTIAL', "\"${localProperties.getProperty('authTempCredential')}\""

        resValue 'string', 'uri_scheme', 'money21m'
        resValue 'string', 'auth_uri_host', 'auth'
    }

    buildFeatures {
        buildConfig true
        compose true
    }

    buildTypes {
        release {
            signingConfig(signingConfigs.debug)
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    Provider composeBom = platform(libs.androidx.compose.bom)
    implementation composeBom

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.androidx.activity
    implementation libs.androidx.activity.compose
    implementation libs.androidx.paging.compose
    implementation libs.androidx.compose.navigation
    implementation libs.androidx.compose.foundation
    implementation libs.androidx.compose.foundation.layout
    implementation libs.androidx.compose.ui.tooling.preview
    debugImplementation libs.androidx.compose.ui.tooling

    Provider koinBom = platform(libs.koin.bom)
    implementation koinBom
    implementation libs.koin.android
    implementation libs.koin.core
    implementation libs.koin.core.viewmodel
    implementation libs.koin.compose.viewmodel.navigation

    implementation libs.powersync.core
    implementation libs.powersync.connector.supabase
    implementation libs.supabase.postgrest

    implementation libs.kotlin.logging
    implementation libs.slf4j.api
    implementation(libs.slf4j.handroid) {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    implementation libs.kotlin.serialization.json

    testImplementation libs.junit

    androidTestImplementation composeBom
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}
